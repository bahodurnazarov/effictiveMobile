definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.RequestSong:
    properties:
      deleted:
        type: boolean
      group_name:
        type: string
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      song_text:
        type: string
    type: object
  models.Song:
    properties:
      createdAt:
        type: string
      deleted:
        type: boolean
      deletedAt:
        type: string
      group_name:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      song_text:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/song:
    post:
      consumes:
      - application/json
      description: Adds a new song to the database using the provided JSON payload.
      parameters:
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.RequestSong'
      produces:
      - application/json
      responses:
        "201":
          description: The created song object
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new song
      tags:
      - Songs
  /api/song/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a song from the database using its unique identifier.
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a song
      tags:
      - Songs
    get:
      consumes:
      - application/json
      description: Retrieve a song using its unique ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RequestSong'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a song by ID
      tags:
      - Songs
    put:
      consumes:
      - application/json
      description: Updates the details of a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.RequestSong'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an existing song
      tags:
      - Songs
  /api/songs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of songs with pagination support
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of records per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all songs with pagination
      tags:
      - Songs
  /api/songs/filter:
    get:
      consumes:
      - application/json
      description: Retrieve songs by applying filters and pagination.
      parameters:
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Number of records per page (default is 20)
        in: query
        name: limit
        type: integer
      - description: Filter by group name (partial match)
        in: query
        name: group_name
        type: string
      - description: Filter by song name (partial match)
        in: query
        name: song_name
        type: string
      - description: 'Filter by release date (format: YYYY-MM-DD)'
        in: query
        name: release_date
        type: string
      - description: Filter by song text (partial match)
        in: query
        name: song_text
        type: string
      - description: Filter by link (partial match)
        in: query
        name: link
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get Songs with Filters
      tags:
      - Songs
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Ping
      tags:
      - Routes
swagger: "2.0"
